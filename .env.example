# ================================
# SAZONARTE API - ENVIRONMENT VARIABLES
# ================================
# Copia este archivo a .env y ajusta los valores según tu ambiente

# ================================
# SERVER CONFIGURATION
# ================================
PORT=8080
NODE_ENV=development
APP_URL=http://localhost:8080

# ================================
# DATABASE
# ================================
# PostgreSQL connection string
# Formato: postgresql://USER:PASSWORD@HOST:PORT/DATABASE
# Ejemplo local: postgresql://postgres:password@localhost:5432/sazonarte
# Ejemplo Railway: postgresql://postgres:password@containers-us-west-123.railway.app:5432/railway
DATABASE_URL=postgresql://postgres:password@localhost:5432/sazonarte

# ================================
# JWT AUTHENTICATION
# ================================
# Genera un secret seguro con: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=cambiar-por-un-secret-super-seguro-aleatorio-de-64-caracteres

# Número de rondas para bcrypt (10 es recomendado para producción)
SALT_ROUNDS=10

# Tiempo de expiración del access token en minutos (30 minutos = 0.5 horas)
JWT_ACCESS_EXPIRATION_MINUTES=30

# Tiempo de expiración del refresh token en días (7 días = 1 semana)
JWT_ACCESS_EXPIRATION_DAYS=7

# ================================
# CORS (Opcional)
# ================================
# Si necesitas configurar CORS específico, descomenta y ajusta:
# ALLOWED_ORIGINS=http://localhost:5173,https://tu-frontend.vercel.app

# ================================
# NOTAS IMPORTANTES
# ================================
# - NUNCA commitees el archivo .env a Git
# - Usa valores diferentes para cada ambiente (dev, staging, prod)
# - Genera un nuevo JWT_SECRET para cada ambiente
# - En producción, usa DATABASE_URL de tu proveedor (Railway, Neon, etc.)
# - En producción, NODE_ENV debe ser "production"
